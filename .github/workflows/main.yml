name: CI/CD Pipeline

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Placeholder for future tests
        run: |
          echo "TODO: Implement actual tests in the future"
          echo "Current placeholder always passes"
          
  deploy:
    needs: test
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Raspberry Pi
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          # Install sshpass if not already installed
          if ! command -v sshpass &> /dev/null; then
            echo "Installing sshpass..."
            sudo apt-get update && sudo apt-get install -y sshpass
          fi
          
          # Deploy to Raspberry Pi using password authentication
          sshpass -p "$PI_PASSWORD" ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST << 'EOF'
            cd /path/to/your/app  # Replace with actual path on Pi
            git pull origin main
            docker compose down
            docker compose build --no-cache
            docker compose up -d
          EOF
          
      - name: Verify deployment
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          sshpass -p "$PI_PASSWORD" ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST "docker compose ps" 