name: Deploy to Raspberry Pi

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Placeholder for future tests
        run: |
          echo "TODO: Implement actual tests in the future"
          echo "Current placeholder always passes"
          
  deploy:
    needs: test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Raspberry Pi
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          # Deploy to Raspberry Pi using password authentication
          if ! sshpass -p "$PI_PASSWORD" ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST "cd /home/cesc/personal-finances && \
            git stash && \
            git pull origin main && \
            sudo systemctl stop personal-finances && \
            sudo systemctl start personal-finances"; then
            echo "::error::Deployment failed - could not update and restart the service"
            exit 1
          fi
          
      - name: Verify deployment
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          if ! sshpass -p "$PI_PASSWORD" ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST "sudo systemctl status personal-finances"; then
            echo "::error::Service verification failed - the service is not running"
            exit 1
          fi
          
      - name: Check application health
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          # Wait for application to be ready with retries
          MAX_RETRIES=12  # 2 minutes total (12 * 10 seconds)
          RETRY_INTERVAL=10
          
          for i in $(seq 1 $MAX_RETRIES); do
            echo "Health check attempt $i of $MAX_RETRIES..."
            
            # Try to get the response and check both status and content
            if sshpass -p "$PI_PASSWORD" ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST "curl -s -f -m 5 http://localhost:5001/"; then
              echo "Application is healthy and responding!"
              exit 0
            fi
            
            if [ $i -lt $MAX_RETRIES ]; then
              echo "Application not ready yet, waiting ${RETRY_INTERVAL} seconds..."
              sleep $RETRY_INTERVAL
            fi
          done
          
          echo "::error::Application health check failed after $MAX_RETRIES attempts - the application is not responding"
          exit 1 