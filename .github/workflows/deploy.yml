name: Deploy to Raspberry Pi

on:
  push:
    branches: [ develop, main ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Placeholder for future tests
        run: |
          echo "TODO: Implement actual tests in the future"
          echo "Current placeholder always passes"
          
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Raspberry Pi
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          # Deploy to Raspberry Pi using password authentication
          if ! sshpass -p "$PI_PASSWORD" ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST << 'EOF'
            cd /path/to/your/app  # Replace with actual path on Pi
            # Stash any local changes to allow clean pull
            # These changes are preserved in the stash but not reapplied
            git stash
            # Pull latest changes
            git pull origin main
            # Rebuild and restart containers
            docker compose down
            docker compose build
            docker compose up -d
          EOF; then
            echo "Deployment failed"
            exit 1
          fi
          
      - name: Verify deployment
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        run: |
          if ! sshpass -p "$PI_PASSWORD" ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST "docker compose ps"; then
            echo "Deployment verification failed"
            exit 1
          fi 