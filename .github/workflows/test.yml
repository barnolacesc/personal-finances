name: Run Tests

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:
  test:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Debug runner environment
        run: |
          echo "🔍 Debugging runner environment..."
          echo "Current user: $(whoami)"
          echo "User ID: $(id)"
          echo "Home directory: $HOME"
          echo "Current PATH: $PATH"
          echo "Working directory: $(pwd)"
          echo "Available Python binaries:"
          find /usr -name "python*" -type f -executable 2>/dev/null || echo "No python found in /usr"
          find /bin -name "python*" -type f -executable 2>/dev/null || echo "No python found in /bin"
          ls -la /usr/bin/python* 2>/dev/null || echo "No python* in /usr/bin"
          echo "Testing direct paths:"
          /usr/bin/python --version 2>/dev/null && echo "✅ /usr/bin/python works" || echo "❌ /usr/bin/python failed"
          /usr/bin/python3 --version 2>/dev/null && echo "✅ /usr/bin/python3 works" || echo "❌ /usr/bin/python3 failed"

      - name: Set up Python environment and run tests
        run: |
          # Find Python - try multiple approaches
          PYTHON_CMD=""

          echo "🔍 Searching for Python..."

          # Try common system Python locations with execution test
          for path in /usr/bin/python3 /usr/bin/python /usr/local/bin/python3 /bin/python3; do
            if [ -f "$path" ] && [ -x "$path" ]; then
              echo "Testing $path..."
              if "$path" --version >/dev/null 2>&1; then
                PYTHON_CMD="$path"
                echo "✅ Found working Python at: $path"
                break
              else
                echo "⚠️  Found $path but execution failed"
              fi
            fi
          done

          # Fallback to PATH if found there
          if [ -z "$PYTHON_CMD" ]; then
            for cmd in python3 python; do
              if command -v $cmd &> /dev/null; then
                if $cmd --version >/dev/null 2>&1; then
                  PYTHON_CMD=$cmd
                  echo "✅ Found working Python in PATH: $cmd"
                  break
                else
                  echo "⚠️  Found $cmd in PATH but execution failed"
                fi
              fi
            done
          fi

          # Last resort: try to use sudo to access python as cesc user
          if [ -z "$PYTHON_CMD" ]; then
            echo "🔄 Trying to run as cesc user..."
            if sudo -u cesc /usr/bin/python3 --version >/dev/null 2>&1; then
              PYTHON_CMD="sudo -u cesc /usr/bin/python3"
              echo "✅ Found Python via sudo as cesc user"
            elif sudo -u cesc /usr/bin/python --version >/dev/null 2>&1; then
              PYTHON_CMD="sudo -u cesc /usr/bin/python"
              echo "✅ Found Python via sudo as cesc user"
            fi
          fi

          if [ -z "$PYTHON_CMD" ]; then
            echo "❌ Python not found with any method"
            echo "Searched: /usr/bin/python3, /usr/bin/python, /usr/local/bin/python3, /bin/python3, PATH, sudo as cesc"
            exit 1
          fi

          echo "🐍 Using Python: $PYTHON_CMD"
          echo "🐍 Version: $($PYTHON_CMD --version)"

          # Create virtual environment and install dependencies
          echo "📦 Creating virtual environment..."
          $PYTHON_CMD -m venv ci_venv

          echo "🔌 Activating virtual environment..."
          source ci_venv/bin/activate

          # Install dependencies
          echo "📥 Installing dependencies..."
          pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

          # Run all checks in sequence
          echo "🧪 Running tests..."
          pytest -v --tb=short

          echo "🔍 Running flake8 linting..."
          flake8 --max-line-length=88 --extend-ignore=E203,W503 app.py tests/

          echo "🎨 Checking code formatting with black..."
          black --check --diff app.py tests/

          echo "✅ All checks completed successfully"

          # Clean up
          echo "🧹 Cleaning up..."
          deactivate
          rm -rf ci_venv
